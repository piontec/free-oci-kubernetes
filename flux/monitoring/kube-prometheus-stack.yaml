# from: https://github.com/fluxcd/flux2/blob/main/manifests/monitoring/kube-prometheus-stack/release.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '51.x'
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  valuesFrom:
    - kind: Secret
      name: prom-stack-grafana-pass
    # doesn't wrok :(
    #    - kind: Secret
    #      name: alertmanager-slack-api-secret
    #      valuesKey: url
    #      targetPath: ".alertmanager.config.receivers[1].slack_configs[0]"
  values:
    prometheus:
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
    defaultRules:
      create: true
      disabled:
        KubeletDown: true
      rules:
        alertmanager: true
        etcd: false
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: false
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    alertmanager:
      enabled: true
      alertmanagerSpec:
        volumes:
          - name: url-secret
            secret:
              secretName: alertmanager-slack-api-secret
        volumeMounts:
          - name: url-secret
            mountPath: /etc/slack-url
            readOnly: true
        resources:
          requests:
            cpu: 50m
      config:
        inhibit_rules:
          - source_matchers:
              - 'alertname = InfoInhibitor'
            target_matchers:
              - 'severity = info'
            equal:
              - 'namespace'
        route:
          group_by: ['namespace']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'piontec-slack'
          routes:
          - receiver: 'null'
            matchers:
              - alertname =~ "InfoInhibitor|Watchdog"
        receivers:
          - name: 'null'
          - name: 'piontec-slack'
            slack_configs:
              - send_resolved: true
                channel: '#alerts'
                username: alertmanager
                api_url_file: /etc/slack-url/url
      ingress:
        enabled: false
          #      alertmanagerSpec:
          #        alertmanagerConfiguration:
          #          name: default-alertmanager-config
    grafana:
      grafana.ini:
        server:
          root_url: 'https://sys.tailored.cloud/grafana'
          serve_from_sub_path: true
          domain: 'sys.tailored.cloud'
      plugins:
        - oci-metrics-datasource
      additionalDataSources:
        - name: "Oracle Cloud Infrastructure Metrics"
          type: "oci-metrics-datasource"
          typeName: "Oracle Cloud Infrastructure Metrics"
          typeLogoUrl: "public/plugins/oci-metrics-datasource/img/Oracle-cloud.svg"
          access: proxy
          readOnly: false
          jsonData: 
            defaultRegion: "eu-frankfurt-1"
            environment: "OCI Instance"
            profile0: "DEFAULT"
      ingress:
        enabled: true
        hosts:
          - sys.tailored.cloud
        path: /grafana
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
        tls:
          - secretName: grafana.tailored.cloud-tls
            hosts:
            - sys.tailored.cloud
    kubelet:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
  postRenderers:
    - kustomize:
        patches:
          - target:
              # Ignore these objects from Flux diff as they are mutated from chart hooks
              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)
              name: kube-prometheus-stack-admission
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          - target:
              # Ignore these objects from Flux diff as they are mutated at apply time but not at dry-run time
              kind: PrometheusRule
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled  
